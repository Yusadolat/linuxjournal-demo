<?php

/**
 * @file
 * Install, update and uninstall functions for the Linux Journal installation
 * profile.
 */

/**
 * Implements hook_install().
 *
 * Run the hook_install() function from the minimal profile as part of this
 * profile.
 */
function linuxjournal_install() {
  // Utilise the hook_install() implementation from the minimal profile.
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  minimal_install();

  // Enable the administration theme.
  $admin_theme = 'seven';
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('admin_theme', $admin_theme);
  variable_set('node_admin_theme', '1');

  // Create new user roles for Developers, Administrators, Editors and Publishers.
  $roles = array('Developer', 'Administrator', 'Editor', 'Publisher');
  foreach ($roles as $weight => $name) {
    $role = new stdClass;
    $role->name = $name;
    $role->weight = $weight + 2; // New roles must have at least a weight of 2.

    // Save the new role.
    user_role_save($role);

    if ($name == 'Developer') {
      // Give the Developer role all permissions.
      user_role_grant_permissions($role->rid, array_keys(module_invoke_all('permission')));

      // Set this as the administrator role.
      variable_set('user_admin_role', $role->rid);

      // Assign user 1 the Developer role.
      db_insert('users_roles')
        ->fields(array('uid' => 1, 'rid' => $role->rid))
        ->execute();
    }
  }

  // Add text formats.
  $text_formats['filtered_html'] = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
        // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $text_formats['full_html'] = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
        // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $text_formats['raw_html'] = array(
    'format' => 'raw_html',
    'name' => 'Raw HTML',
    'weight' => 2,
  );
  foreach ($text_formats as $text_format) {
    $text_format = (object) $text_format;
    filter_format_save($text_format);
  }

  // Add the TinyMCE editor to the Filtered HTML text format.
  $tinymce_settings = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 0,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' => array(
      'default' => array(
        'bold' => 1,
        'italic' => 1,
        'strikethrough' => 1,
        'justifyleft' => 1,
        'justifycenter' => 1,
        'justifyright' => 1,
        'justifyfull' => 1,
        'bulllist' => 1,
        'numlist' => 1,
        'link' => 1,
        'unlink' => 1,
        'anchor' => 1,
        'image' => 1,
        'formatselect' => 1,
        'sup' => 1,
        'sub' => 1,
        'blockquote' => 1,
        'code' => 1,
        'hr' => 1,
        'removeformat' => 1,
        'charmap' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  $record = array(
    'format' => 'filtered_html',
    'editor' => 'tinymce',
    'settings' => $tinymce_settings,
  );

  drupal_write_record('wysiwyg', $record);
}
